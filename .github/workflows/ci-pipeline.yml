name: Selenium Cucumber TestNG Pipeline

on:
  push:
    branches:
      - 204175A
  pull_request:
    branches:
      - 204175A

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/UI/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Check Chrome version
      - name: Check Chrome version
        id: chrome-version
        run: |
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "chrome_version=${CHROME_VERSION}" >> $GITHUB_ENV

      # Step 5: Upload chromedriver.exe for Windows
      - name: Upload chromedriver.exe (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: chromedriver-exe
          path: src/test/resources/driver/chromedriver.exe

      # Step 6: Install Wine to run .exe on Ubuntu
      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine64 wine32

      # Step 7: Download and install dependencies
      - name: Install Maven dependencies
        run: mvn install -DskipTests
        working-directory: UI

      # Step 8: Download chromedriver.exe artifact
      - name: Download chromedriver.exe artifact
        uses: actions/download-artifact@v3
        with:
          name: chromedriver-exe

      # Step 9: Make chromedriver.exe executable with Wine
      - name: Make chromedriver.exe executable with Wine
        run: |
          sudo wine src/test/resources/driver/chromedriver.exe --version
          sudo chmod +x src/test/resources/driver/chromedriver.exe
          echo "Using chromedriver located at: src/test/resources/driver/chromedriver.exe"

      # Step 10: Run tests and generate Allure results
      - name: Run tests and generate Allure results
        run: mvn test -Dsurefire.suiteXmlFiles=testng.xml -Dallure.results.directory=target/allure-results
        working-directory: UI

      # Step 11: Generate Allure HTML report
      - name: Generate Allure Report
        run: |
          npm install -g allure-commandline --force
          allure generate target/allure-results -o target/allure-report --clean
        working-directory: UI

      # Step 12: Upload Allure HTML report as an artifact
      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: UI/target/allure-report
